En la ruta principal del proyecto
    
    Delete git
        rm -rf .git
    
    Inicializar el repositorio
        git init
    
    Eliminar el seguimiento
        rm -rf .git

    Agregar todos los archivos al stage
        git add .
        
        Eliminarlo del stage
        git clean -f
        Eliminar los archivos sin seguimiento
        git clean -f -d

    Ejecutar commit
        git commit -m "descripcion de commit"

    Cuando se realiza una modificación ver los cambios
        git diff

    Si es el último commit  puedes editar el mensaje del commit y a la vez incluir, excluir algun file
        git commit --amend

    Si no es el último commit y quieres modificar solo el mensje del commit 
        git rebase -i HEAD~4
            Cambiar pick por reword. Guardar el file, y reescribir el mensaje. y guardar file
            Para forzar la subida al repositorio
                git push --force origin master

    Deshacer los cambios en un file, siempre y cuando no este en el stage área
        git checkout -- namefile

        Pero si esta en el stage área debemos ejecutar
            git reset HEAD documentacion
                Y posteriormente
                    git checkout -- namefile

    Agregar un file al stage área
        git add namefile

    Ver log
        git log --oneline | cat
    
    Eliminar un commit, mantiene los cambios en el stage
        git reset 45f73af

    Eliminar un commit, y a la vez elimina los cambios en el stage
        git reset --hard 45f73af 
    
    Eliminar un commit y dejar los cambios en el stage
        git reset --soft 45f73af

    Diferencias entre dos commit
        git diff 45f73af 05a86cfgit 

    Log detalleado decorate
        git log --oneline --decorate

    Revertir cambios de un commit sin necesidad de eliminar un commit
        git revert 45f73af
            Y te activa para que hagas un commit

    Revertir mas de dos commit.
        git revert --no-commit HEAD
        git revert --no-commit HEAD~1
        git revert --continue

    Crear ramas del proyecto que esta montado actualmente
        git branch name

    Cambiar de rama
        git checkout namerama

    Lista las ramas
        git branch

    Crear rama y automaticamente dirigirse a ella
        git checkout -b namerama
    
    Crear una rama en el repository
        git checkout -b namerama
        git push origin newrama
    
    Actualizar ramas remotas
        git remote update origin --prune
        
    Cambiar el nombre de la rama
        Local
            git branch -m nameoriginal namenew
        Remota
            git push origin --delete <old_name>
            git push origin -u <new_name>
    
    Eliminar rama 
        git branch -d namerama
        git branch -D namerama
        
    Eliminar rama remota
        git push origin --delete <NombreRama>
        
    Eliminar una rama que no existe existe en el servidor
        #Primero miro cuales se borarrían
        git remote prune origin --dry-run 
        #Luego las borro
        git remote prune origin 

    Eliminar una rama force
        git branch -D namerama

    Lista de comandos con branch
        git branch -h
    
    Liatar all los commit
        git log --oneline --decorate --all
        git log --oneline --decorate --all --graph
    
    Para fusionar las ramas nos ubicamos en la rama destino
        git merge namerama
        
    Crear alias
        git config --global alias.lodag 'log --oneline --decorate --all --graph'
        git config --global alias.unstage 'reset HEAD --'
        git config --global alias.lod '--oneline --decorate --color'

    Listar alias que concidan con
        git config --global --get-regexp alias
    
    Eliminar un alias
        git config --global --unset alias.lod

    Abortar el intento de merge
        git merge --abort

    Crear un tag en el estado actual
        git tag v0.2.0

    Crear un tag con un hash anterior
        git tag v0.1.0 45f73af
    
    Dirigirme a un tag 
        git checkout v0.1.0
    
    Listar los tag 
        git tag
    
    Listar comandos para el tag
        git tag -h
    
    Eliminar un tag
        git tag -d v0.1.0

    En caso de que existan muchos tag se pueden filtrar
        git tag -l "v0.*.0"

    Para crear un tag con anotaciones
        git tag -a v0.1.0
            Aqui de escribe con detalle las características del tag (Autor, porque, que, entre otros)

    Mostrar información del tag Auditoria
        git show v0.1.0
    
    Auditoria master 
        git show master
    
    Auditoria de un commit
        git show 45f73af

    Cambiar de rama cuando aún tienes cambios en el stage, recomendación colocarle una descripción
        git stash
        git stash save "Descripción del stash"
    
    Listar los stash
        git stash list
    
    Listar los comandos para el stash
        git stash -h
    
    Restaurar los cambios en la rama la cual se estaba trabajando despúes de un stash
        git stash apply
            Lo mantiene en la lista de los stash 
        git stash pop
            Lo elimina de la lista de los stash

    Para eliminar un stash el último
        git stash drop 
        
    Para eliminar todos los stash
        git stash clear
    
    Detalle del stash
        git stash show [stash]
    
        selección de un stash
            git stash show stash@\{0\}    
    
    =============================================================================================
    =============================================================================================
    Listar la configuración local
        git config --list

        Establecer el usuario
            Local
                git config user.name "hdepablos"

            Global
                git config --global user.name "hdepablos"

        Establecer el email
            Local
                git config user.email "email@example.com"
            Global
                git config --global user.email "email@example.com"

        Establecer el password
            Local
                git config user.password "xxx"
            Global
                git config --global user.password "xxx"

        Eliminar un dato en el lista
            git config --unset user.password

    Add repository remote
        git remote add origin https://github.com/hdepablos/comandos-git.git

    Ver la ruta del repository activo
        git remote -v
        
    Cambiar el repository
        git remote set-url origin https://github.com/hdepablos/xxx.git
        git remote -v
        
    Para subir al servidor
        git push origin master

    Descargar un proyecto de la nube
        git clone https://github.com/hdepablos/comandos-git.git
        
        git clone ssh://root@10.XX.XX.XX/var/www/nameproyect

    Actualizar el proyecto local con el de la nube
        git pull origin master

    Mostrar all branch
        git branch --all
    
    Mostrar los commit despúes de cierta fecha
        git lodag --since=2019-02-01
    
    Para crear el file gitignore, 
        touch .gitignore

        Recomendación:            
            /node_modules
            /public/storage
            /storage/*.key
            /vendor
            .env 

    =============================================================================================
    =============================================================================================
    Nota: Solo aplicar en local

    Para unir varios commit en uno solo 
        git rebase -i HEAD~4

        Estado original:
            pick hash
            pick hash
            pick hash
            pick hash

        Modificar a:
            pick hash
            squash hash
            squash hash
            squash hash

        Automaticamente colocar el mensaje para ejecutar el commit


    =============================================================================================
    =============================================================================================
    Visualizar file:
        git show <hash-commit>:<url-archivo>
        
        git log --follow -p -- /var/www/html/asback/resources/views/vendor/adminlte/layouts/partials/rolsidebar/_admin.blade.php

    
    
    Limpiar cache:
        git rm -r --cached .
        
    =============================================================================================
    =============================================================================================
    Crear repositorio local
    
        Nos ubicamos en la carpeta donde están los respositorios.

            Creamos el nombre de la carpeta
                mkdir wc-promociones.git
                cd wc-promociones
                git --bare init
            
                git config core.sharedrepository 1
                git config receive.denyNonFastforwards true
                git config --bool core.bare true
                find objects -type d -exec chmod 02770 {} \;
                
                En una sola linea en consola
                    git config core.sharedrepository 1 && git config receive.denyNonFastforwards true && git config --bool core.bare true && find objects -type d -exec chmod 02770 {} \;
        
        En la máquina local, en el proyecto git:
            git remote add origin ssh://root@XX.XX.XXX.XX/var/www/wc-promociones.git
            git push -u origin master
            
            Verificar 
                git checkout origin/master
                git branch -f master origin/master
                git checkout master
            
            
    =============================================================================================
    =============================================================================================
    Despues de un merge incorrecto podemos revertir de esta forma
        git checkout origin/master .
        
        
    Error
        git index.lock File exists
    solución:
        rm -f .git/index.lock
