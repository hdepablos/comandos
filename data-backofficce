Crear el factory:
    <?php

    /** @var \Illuminate\Database\Eloquent\Factory $factory */

    use App\Region;
    use App\Customer;
    use App\CustomerAddress;
    use Faker\Generator as Faker;

    $factory->define(CustomerAddress::class, function (Faker $faker) {
        return [
            'customer_id' => App\Customer::all()->random(1)->first()->id,
            'region_id' => App\Region::all()->random(1)->first()->id,
            'city' => $faker->sentence(4),
            'address' => $faker->address
        ];
    });

Agregar en el archivo CustomerFactory.php
    Al final del archivo agregar:
        $factory->afterCreating(App\Customer::class, function ($data, $faker) {
            $data->addresses()->saveMany(factory(App\CustomerAddress::class, 2)->make(['customer_id' => $data->id]));
        });

En el archivo DatabaseSeeder
    comentar la linea 12
        $this->call(BranchsBankPatagoniaSeeder::class);

Ejecutar:
    php artisan migrate:refresh --seed

    php artisan tinker
        factory(\App\BankAccount::class, 30)->create();
        factory(\App\Loan::class, 30)->create();
        
    php artisan db:seed --class=LoanInstallmentSeeder
    php artisan db:seed --class=NewOperatorSeeder
    
    php artisan tin
        factory(App\OfferFile::class, 1)->create();
        factory(App\OfferFileContent::class, 10)->create();
    
    
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    payments
        INSERT INTO payments.rapi_pago_accounts
        (id, entity_code, is_active, created_at, updated_at)
        VALUES(1, '4520', 1, '2021-07-12 22:44:55.000', '2021-07-12 22:45:04.000');
        
        
    
    factory(App\Models\BankAccount::class, 50)->create();
    factory(App\Models\Branch::class, 70)->create();
    factory(App\Models\PaymentOrder::class, 70)->create();
    
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Branches cuando se realiza migrate refresh da un error donde el campos email no null, en el seeeder NewUserSeeder cuando crea el user
    agregar
    "email" => "mutual@libgot.com",
    
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    risk
        php artisan db:seed --class=EmployerGroupSeeder
        php artisan db:seed --class=BankSeeder
        php artisan db:seed --class=ConfigMutualRuleSeeder
        
        php artisan tin
            factory(App\Models\Branch::class, 80)->create();
            factory(App\Models\EmployerGroup::class, 5)->create();
        
