$this->initQueryBuilder(['id', 'name', 'provider_id', 'created_at', 'provider.id']);
// $allowedIncludes = ['provider', 'description', 'categories', 'variants.variantProductAtributtes.typeAtributte.nameAtributte', 'images'];
$allowedIncludes = ['provider'];
$fields = [
    'id', 'name', 'provider_id', 'is_active', 'created_at', 'updated_at',
    'provider.id', 'provider.name', 'provider.created_at', 'provider.updated_at',
    // 'description.product_id', 'description.description',
    // 'variants.id', 'variants.product_id', 'variants.quantity', 'variants.is_active', 'variants.path_img', 'variants.sku', 'variants.barcode',
    // 'images.id', 'images.product_id', 'images.path'
];
$allowedAppends = [];
// $this->allowedFilter[] = AllowedFilter::scope('withTotalStock', 'withTotalStock');
return $this->filter($this->allowedFilter, $allowedIncludes, $fields, [], $allowedAppends);


$params = '?disablePagination=true';
        $params = $params . '&include=provider';
        $params = $params . '&fields[provider]=id,name';
        // $params = $params . '&filter[id]=1';
        $params = $params . '&filter[provider.id]=1';

        $url = "http://asbackoffice.vm/api/products/builder${params}";
        $response = $this->json('GET', $url, [], $this->dataHeader('asback@gmail.com'));
        dd($response->content());

-- Test
https://github.com/spatie/laravel-query-builder/blob/8a723a26b80f1095d115fe42091e82183379a5ff/tests/SortTest.php#L90-L103
